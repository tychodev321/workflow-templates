name: Build NodeJS
description: 'Build NodeJS'
inputs:
  caching:
    description: 'Whether to cache dependencies or not.'
    required: false
    default: 'true'
  upload-test-results:
    description: 'Whether to upload test results or not.'
    required: false
    default: 'false'
  run-bdd-test:
    description: 'Whether to run BDD Tests or not.'
    required: false
    default: 'false'
  app-base-dir:
    description: 'The App Base Directory.'
    required: false
    default: '.'
outputs:
  used-cache:
    description: 'Whether the cache was used.'
    value: ${{ steps.install.outputs.cache }}
  uploaded-test-results:
    description: 'Whether the test results were uploaded.'
    value: ${{ steps.upload-results.outputs.uploaded }}
runs:
  using: 'composite'
  steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Setup Build
        run: |
          cd ${{ inputs.app-base-dir }}
          node --version
          npm --version
          yarn --version
        shell: bash

      - name: Cache Dependencies
        if: inputs.caching == 'true'
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        id: install
        if: steps.cache.outputs.cache-hit != 'true' || inputs.caching != 'true'
        run: |
          yarn install
          echo "cache='${{ inputs.caching }}'" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build Code
        run: |
          yarn run build
        shell: bash

      - name: Lint Code
        run: |
          yarn run lint
        shell: bash

      - name: Test Code
        run: |
          yarn run test
        shell: bash

      - name: Test BDD Code
        if: inputs.run-bdd-test == 'true'
        run: |
          yarn run e2e
        shell: bash
          
      - name: Upload Results
        if: inputs.upload-test-results == 'true'
        id: upload-results
        run: |
          echo "Not Implemented"
          echo "uploaded='${{ inputs.upload-test-results }}'" >> $GITHUB_OUTPUT
        shell: bash