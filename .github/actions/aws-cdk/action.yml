name: Deploy AWS CDK
description: 'Deploy AWS CDK'
inputs:
  caching:
    description: 'Whether to cache dependencies or not.'
    required: false
    default: 'true'
  environment:
    description: 'The environment the deployment is for.'
    required: false
    default: 'acpt'
  region:
    description: 'The region the deployment is for.'
    required: false
    default: 'us-east-1'
  deploy:
    description: 'Whether to deploy or not.'
    required: false
    default: 'true'
  destroy:
    description: 'Whether to destroy or not.'
    required: false
    default: 'false'
  infra-base-dir:
    description: 'The Infra Base Directory.'
    required: false
    default: '.'
  aws-account-id:
    description: 'The AWS Account the deploy is for.'
    required: false
runs:
  using: 'composite'
  steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Deploy
        run: |
          cd ${{ inputs.infra-base-dir }}
          export AWS_DEFAULT_REGION=${{ inputs.region }}

          echo "Configuring Python..."
          python --version
          python -m pip --version
          poetry about
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
        shell: bash

      - name: Cache Dependencies
        if: inputs.caching == 'true'
        id: cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: deps-python-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        id: install
        if: steps.cache.outputs.cache-hit != 'true' || inputs.caching != 'true'
        run: |
          poetry install
          echo "cache='${{ inputs.caching }}'" >> $GITHUB_OUTPUT
        shell: bash

      - name: Validate Infra
        run: |
          echo "Validating Infrastructure for ${{ inputs.environment }} ${{ inputs.region }}..."
          poetry run cdk bootstrap aws://${{ inputs.aws-account-id }}/${{ inputs.region }}
          poetry run cdk ls
          poetry run cdk synth
        shell: bash

      - name: Deploy Infra
        if: inputs.deploy == 'true'
        run: |
          echo "Deploying Infrastructure for ${{ inputs.environment }} ${{ inputs.region }}..."
          poetry run cdk deploy --require-approval never
        shell: bash

      - name: Destroy Infra
        if: inputs.destroy == 'true'
        run: |
          echo "Destroying Infrastructure for ${{ inputs.environment }} ${{ inputs.region }}..."
          poetry run cdk destroy --force
        shell: bash